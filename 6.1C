pipeline {
    agent any
    
    stages {
        stage('Build') {
            steps {
                // Build the code using Maven
                script {
                    sh 'mvn clean package'
                }
            }
        }
        
        stage('Unit and Integration Tests') {
            steps {
                // Run unit tests using JUnit and integration tests using Selenium or Postman
                script {
                    // Placeholder for running unit and integration tests
                    sh 'mvn test'
                    echo 'Running unit and integration tests...'
                }
            }
        }
        
        stage('Code Analysis') {
            steps {
                // Integrate Jenkins with a code analysis tool i.e. SonarQube
                script {
                    // Placeholder for code analysis
                    sh 'sonar-scanner'
                    echo 'Performing code analysis...'
                }
            }
        }
        
        stage('Security Scan') {
            steps {
                // Integrate Jenkins with a security scanning tool like OWASP ZAP or SonarQube
                script {
                    // Placeholder for security scan
                    sh 'zap-scanner'
                    echo 'Performing security scan...'
                }
            }
        }
        
        stage('Deploy to Staging') {
            steps {
                // Deploy the application to a staging server (e.g., AWS EC2) using AWS CLI or Jenkins AWS plugin
                script {
                    // Placeholder for deployment to staging
                    sh 'jenkins-deploy-staging'
                    echo 'Deploying to staging...'
                }
            }
        }
        
        stage('Integration Tests on Staging') {
            steps {
                // Run integration tests on the staging environment
                script {
                    // Placeholder for running integration tests on staging
                    sh 'mvn test'
                    echo 'Running integration tests on staging...'
                }
            }
        }
        
        stage('Deploy to Production') {
            steps {
                // Deploy the application to a production server (e.g., AWS EC2) using AWS CLI or Jenkins AWS plugin
                script {
                    // Placeholder for deployment to production
                    sh 'jenkins-deploy-production'
                    echo 'Deploying to production...'
                }
            }
        }
    }
    
    post {
        success {
            // Send success notification email with logs as attachment
            emailext body: "Pipeline executed successfully.",
                     subject: "Pipeline Success",
                     to: "j28249618@gmail.com",
                     attachLog: true
        }
        failure {
            // Send failure notification email with logs as attachment
            emailext body: "Pipeline execution failed.",
                     subject: "Pipeline Failure",
                     to: "j28249618@gmail.com",
                     attachLog: true
        }
    }
}
